{"version":3,"file":"time-slot.js","sources":["pages/index/time-slot.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovUHJvamVjdC9ZdXdvQXBwL3BhZ2VzL2luZGV4L3RpbWUtc2xvdC52dWU"],"sourcesContent":["<template>\r\n  <view class=\"machine-time-slot\">\r\n    <view class=\"machine-header\">\r\n      <text class=\"machine-name\" @click=\"showMachineInfo\">{{ machineName }}</text>\r\n      <view class=\"machine-stats\">\r\n        <view class=\"stat-item\">\r\n          <text>机台数</text>\r\n          <text class=\"stat-value\">{{ machineCount }}</text>\r\n        </view>\r\n        <view class=\"stat-item\">\r\n          <text>最多可排队数</text>\r\n          <text class=\"stat-value\">{{ maxQueueCount }}</text>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <slot name=\"machine-info\"></slot>\r\n\r\n    <view class=\"time-slot-section\">\r\n      <view class=\"user-avatars\" v-if=\"showAvatars && !isFolded\">\r\n        <image\r\n          v-for=\"(avatar, index) in avatars\"\r\n          :key=\"index\"\r\n          :src=\"avatar.src\"\r\n          class=\"user-avatar\"\r\n          mode=\"aspectFill\"\r\n        />\r\n      </view>\r\n\r\n      <view class=\"user-avatars-merged\" v-if=\"showAvatars && isFolded && totalUserCount > 0\">\r\n        <image\r\n          v-for=\"(avatar, index) in avatars.slice(0, 2)\"\r\n          :key=\"index\"\r\n          :src=\"avatar.src\"\r\n          class=\"user-avatar\"\r\n          :style=\"{ marginLeft: index > 0 ? '-15rpx' : '0' }\"\r\n          mode=\"aspectFill\"\r\n        />\r\n      </view>\r\n\r\n      <view class=\"timelines-container\">\r\n        <view class=\"time-indicators\">\r\n          <text v-for=\"time in timeMarkers\" :key=\"time\" class=\"time-marker\">{{ time }}</text>\r\n        </view>\r\n\r\n        <view class=\"timeline\">\r\n          <view class=\"timeline-bg\"></view>\r\n          <view\r\n            v-for=\"(slot, index) in mergedTimeSlots\"\r\n            :key=\"'merged-' + index\"\r\n            class=\"time-slot\"\r\n            :style=\"{\r\n              left: calculateLeftPosition(slot.startTime) + '%',\r\n              width: calculateWidth(slot.startTime, slot.endTime) + '%',\r\n            }\"\r\n          >\r\n            <text\r\n              ref=\"slotTextRefs\"\r\n              class=\"slot-text\"\r\n              :class=\"{\r\n                'text-centered': textPosition[index] === 'center',\r\n                'text-left': textPosition[index] === 'left',\r\n                'text-right': textPosition[index] === 'right'\r\n              }\"\r\n              :style=\"{\r\n                '--left-offset': textOffsets[index] + 'rpx',\r\n                '--right-offset': textOffsets[index] + 'rpx'\r\n              }\"\r\n              v-if=\"index === longestSlotIndex\"\r\n            >\r\n              共 {{ totalUserCount }} 人排队\r\n            </text>\r\n          </view>\r\n        </view>\r\n\r\n        <view v-if=\"!isFolded\" class=\"individual-timelines\">\r\n          <view\r\n            v-for=\"(slot, slotIndex) in filteredTimeSlots\"\r\n            :key=\"'user-' + slotIndex\"\r\n            class=\"timeline user-timeline\"\r\n          >\r\n            <view class=\"timeline-bg user-timeline-bg\"></view>\r\n            <view\r\n              class=\"time-slot\"\r\n              :style=\"{\r\n                left: calculateLeftPosition(slot.startTime) + '%',\r\n                width: calculateWidth(slot.startTime, slot.endTime) + '%',\r\n                backgroundColor: slot.color || '#FF8D1A'\r\n              }\"\r\n            >\r\n              <text class=\"slot-text\">{{ calculateText(slot.startTime, slot.endTime) }}</text>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <view class=\"status-message\" v-if=\"totalUserCount > 2\" @click=\"toggleFold\">\r\n      <text class=\"status-text\">{{ isFolded ? '打开预约列表' : '折叠预约列表' }}</text>\r\n      <text class=\"toggle-icon\">{{ isFolded ? '▼' : '▲' }}</text>\r\n    </view>\r\n\r\n    <button class=\"action-button\" @click=\"onButtonClick\">{{ buttonText }}</button>\r\n\r\n    <uni-popup ref=\"popup\" type=\"dialog\" @change=\"change\">\r\n      <uni-popup-dialog\r\n        :title=\"machineName\"\r\n        :content=\"machineDescription\"\r\n        :type=\"msgType\"\r\n        @confirm=\"dialogConfirm\"\r\n        @close=\"dialogClose\"\r\n      />\r\n    </uni-popup>\r\n  </view>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, ref, onMounted, nextTick } from 'vue';\r\nimport { defineEmits, defineProps } from 'vue';\r\n\r\nconst props = defineProps({\r\n  machineName: {\r\n    type: String,\r\n    default: '机台1'\r\n  },\r\n  machineType: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  machineCount: {\r\n    type: [Number, String],\r\n    default: 1\r\n  },\r\n  maxQueueCount: {\r\n    type: [Number, String],\r\n    default: 2\r\n  },\r\n  timeSlots: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  avatars: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  showAvatars: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  startHour: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  endHour: {\r\n    type: Number,\r\n    default: 24\r\n  },\r\n  statusMessage: {\r\n    type: String,\r\n    default: '折叠预约列表'\r\n  },\r\n  buttonText: {\r\n    type: String,\r\n    default: '预约此机台'\r\n  },\r\n  machineDescription: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['buttonClick']);\r\nconst isFolded = ref(true);\r\nconst popup = ref(null);\r\nconst msgType = ref('info');\r\nconst textPosition = ref([]);\r\nconst textOffsets = ref([]);  //  存储文本偏移量的数组\r\nconst slotTextRefs = ref([]);\r\n\r\nconst filteredTimeSlots = computed(() => {\r\n  return props.timeSlots.filter(slot => slot.machine === props.machineType && slot.machineName === props.machineName);\r\n});\r\n\r\nconst totalUserCount = computed(() => {\r\n  return filteredTimeSlots.value.length;\r\n});\r\n\r\nconst toggleFold = () => {\r\n  isFolded.value = !isFolded.value;\r\n};\r\n\r\nconst mergedTimeSlots = computed(() => {\r\n  if (filteredTimeSlots.value.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  const sortedSlots = [...filteredTimeSlots.value].sort((a, b) => {\r\n    const startTimeA = parseInt(a.startTime);\r\n    const startTimeB = parseInt(b.startTime);\r\n    return startTimeA - startTimeB;\r\n  });\r\n\r\n  const merged = [];\r\n  let current = { ...sortedSlots[0] };\r\n\r\n  for (let i = 1; i < sortedSlots.length; i++) {\r\n    const currentEndTime = parseInt(current.endTime);\r\n    const nextStartTime = parseInt(sortedSlots[i].startTime);\r\n    const nextEndTime = parseInt(sortedSlots[i].endTime);\r\n\r\n    if (currentEndTime >= nextStartTime) {\r\n      if (nextEndTime > currentEndTime) {\r\n        current.endTime = sortedSlots[i].endTime;\r\n      }\r\n      current.userCount = (current.userCount || 1) + 1;\r\n    } else {\r\n      merged.push(current);\r\n      current = { ...sortedSlots[i] };\r\n    }\r\n  }\r\n\r\n  merged.push(current);\r\n  return merged;\r\n});\r\n\r\nconst timeMarkers = computed(() => {\r\n  return ['00:00', '12:00', '24:00'];\r\n});\r\n\r\nconst calculateLeftPosition = (timeString) => {\r\n  const hour = parseInt(timeString.substring(6, 8));\r\n  const minute = parseInt(timeString.substring(8, 10));\r\n  const totalMinutes = (hour * 60) + minute;\r\n  const dayPercentage = (totalMinutes / (24 * 60)) * 100;\r\n\r\n  return dayPercentage;\r\n};\r\n\r\nconst calculateWidth = (startTime, endTime) => {\r\n  const startPosition = calculateLeftPosition(startTime);\r\n  const endPosition = calculateLeftPosition(endTime);\r\n  const width = endPosition - startPosition;\r\n  return width;\r\n};\r\n\r\nconst calculateText = (startTime, endTime) => {\r\n  const start = formatTime(startTime);\r\n  const end = formatTime(endTime);\r\n  return `${start}-${end}`;\r\n}\r\n\r\nconst formatTime = (timeString) => {\r\n  const hour = timeString.substring(6, 8);\r\n  const minute = timeString.substring(8, 10);\r\n  return `${hour}:${minute}`;\r\n};\r\n\r\nconst onButtonClick = () => {\r\n  emit('buttonClick', props.machineType);\r\n};\r\n\r\nconst showMachineInfo = () => {\r\n  popup.value.open('dialog');\r\n};\r\n\r\nconst closePopup = () => {\r\n  popup.value.close();\r\n};\r\n\r\nconst dialogConfirm = () => {\r\n  popup.value.close();\r\n};\r\n\r\nconst dialogClose = () => {\r\n  popup.value.close();\r\n};\r\n\r\nconst change = (e) => {\r\n  console.log('当前模式：' + e.type + ',状态：' + e.show);\r\n};\r\n\r\nconst longestSlotIndex = computed(() => {\r\n  if (!mergedTimeSlots.value || mergedTimeSlots.value.length === 0) {\r\n    return -1;\r\n  }\r\n\r\n  let longestIndex = 0;\r\n  let maxLength = 0;\r\n\r\n  for (let i = 0; i < mergedTimeSlots.value.length; i++) {\r\n    const slot = mergedTimeSlots.value[i];\r\n    const width = calculateWidth(slot.startTime, slot.endTime);\r\n    if (width > maxLength) {\r\n      maxLength = width;\r\n      longestIndex = i;\r\n    }\r\n  }\r\n  return longestIndex;\r\n});\r\n\r\nconst calculateTextPosition = async () => {\r\n  if (!mergedTimeSlots.value) {\r\n    return;\r\n  }\r\n  await nextTick();\r\n\r\n  const positions = [];\r\n  const offsets = [];\r\n\r\n  for (let i = 0; i < mergedTimeSlots.value.length; i++) {\r\n    const slot = mergedTimeSlots.value[i];\r\n    const slotStart = calculateLeftPosition(slot.startTime);\r\n    const slotEnd = calculateLeftPosition(slot.endTime);\r\n    const slotWidth = slotEnd - slotStart;\r\n\r\n    const textEl = slotTextRefs.value[i];\r\n    const textWidth = textEl ? textEl.offsetWidth : 0; // 获取文本的实际宽度\r\n\r\n    const isTextOverflowingLeft = slotStart < (textWidth / 200); // 转换为百分比\r\n    const isTextOverflowingRight = (100 - slotEnd) < (textWidth / 200); // 转换为百分比\r\n\r\n    let offset = 5;  // 默认偏移量\r\n    if (isTextOverflowingLeft) {\r\n      positions.push('left');\r\n      offset = Math.max(5, (textWidth / 200) - slotStart); // 确保文本完整显示\r\n    } else if (isTextOverflowingRight) {\r\n      positions.push('right');\r\n      offset = Math.max(5, (textWidth / 200) - (100 - slotEnd));\r\n    } else {\r\n      positions.push('center');\r\n      offset = 5;\r\n    }\r\n    offsets.push(offset);\r\n  }\r\n  textPosition.value = positions;\r\n  textOffsets.value = offsets;\r\n};\r\n\r\nonMounted(() => {\r\n  isFolded.value = totalUserCount.value > 2;\r\n  calculateTextPosition();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.machine-time-slot {\r\n  width: 100%;\r\n  padding: 20rpx 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.machine-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20rpx;\r\n  width: 100%;\r\n}\r\n\r\n.machine-name {\r\n  font-size: 32rpx;\r\n  font-weight: bold;\r\n  color: #FF8D1A;\r\n  cursor: pointer;\r\n}\r\n\r\n.machine-stats {\r\n  display: flex;\r\n  gap: 30rpx;\r\n}\r\n\r\n.stat-item {\r\n  font-size: 26rpx;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.stat-value {\r\n  color: #FF8D1A;\r\n  margin-left: 10rpx;\r\n  font-weight: bold;\r\n}\r\n\r\n.time-slot-section {\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 15rpx 0;\r\n  position: relative;\r\n}\r\n\r\n.user-avatars {\r\n  width: 60rpx;\r\n  margin-right: 10rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n}\r\n\r\n.user-avatars-merged {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  z-index: 3;\r\n  display: flex;\r\n}\r\n\r\n.user-avatar {\r\n  width: 60rpx;\r\n  height: 60rpx;\r\n  border-radius: 50%;\r\n  border: 2rpx solid white;\r\n}\r\n\r\n.timelines-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n.time-indicators {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 5rpx;\r\n  padding: 0 10rpx;\r\n}\r\n\r\n.time-marker {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n}\r\n\r\n.timeline {\r\n  height: 60rpx;\r\n  position: relative;\r\n  border-radius: 30rpx;\r\n  overflow: hidden;\r\n  margin-bottom: 20rpx;\r\n  width: 100%;\r\n}\r\n\r\n.individual-timelines {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20rpx;\r\n}\r\n\r\n.timeline-bg {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(to right, rgba(255, 237, 160, 0.8), rgba(255, 226, 122, 0.8));\r\n  z-index: 1;\r\n}\r\n\r\n.user-timeline {\r\n  height: 40rpx;\r\n}\r\n\r\n.user-timeline-bg {\r\n  background: linear-gradient(to right, rgba(255, 245, 210, 0.8), rgba(255, 240, 190, 0.8));\r\n}\r\n\r\n.time-slot {\r\n  position: absolute;\r\n  height: 100%;\r\n  border-radius: 30rpx;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #FF8D1A;\r\n}\r\n\r\n.slot-text {\r\n  color: #654321;\r\n  font-size: 24rpx;\r\n  white-space: nowrap;\r\n  overflow: visible;\r\n  text-overflow: clip;\r\n  padding: 0 10rpx;\r\n  position: absolute; /* 绝对定位使文本可以超出条的长度 */\r\n}\r\n\r\n.text-centered {\r\n  left: 50%;\r\n  transform: translateX(-50%); /* 水平居中 */\r\n}\r\n\r\n.text-left {\r\n  left: var(--left-offset); /* 动态偏移量 */\r\n  transform: translateX(0);\r\n}\r\n\r\n.text-right {\r\n  right: var(--right-offset); /* 动态偏移量 */\r\n  left: auto;\r\n  transform: translateX(0);\r\n}\r\n\r\n.status-message {\r\n  text-align: center;\r\n  margin: 15rpx 0;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.status-text {\r\n  color: #FF8D1A;\r\n  font-size: 26rpx;\r\n}\r\n\r\n.toggle-icon {\r\n  color: #FF8D1A;\r\n  font-size: 26rpx;\r\n  margin-left: 5rpx;\r\n}\r\n\r\n.action-button {\r\n  margin-top: 20rpx;\r\n  width: 400rpx;\r\n  height: 90rpx;\r\n  opacity: 1;\r\n  border-radius: 40px;\r\n  background: rgba(255, 195, 0, 1);\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\r\n  font-size: 28rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #333;\r\n}\r\n\r\n.machine-name {\r\n  cursor: pointer;\r\n  text-decoration: underline;\r\n}\r\n</style>\r\n","import Component from 'D:/Project/YuwoApp/pages/index/time-slot.vue'\nwx.createComponent(Component)"],"names":["ref","computed","uni","nextTick","onMounted"],"mappings":"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"}