{"version":3,"file":"index.js","sources":["uni_modules/wu-ui-tools/libs/function/color/color-convert/index.js"],"sourcesContent":["import route from './route'\r\nimport conversions from './conversions'\r\n\r\nconst convert = {};\r\n\r\nconst models = Object.keys(conversions);\r\n\r\nfunction wrapRaw(fn) {\r\n\tconst wrappedFn = function (...args) {\r\n\t\tconst arg0 = args[0];\r\n\t\tif (arg0 === undefined || arg0 === null) {\r\n\t\t\treturn arg0;\r\n\t\t}\r\n\r\n\t\tif (arg0.length > 1) {\r\n\t\t\targs = arg0;\r\n\t\t}\r\n\r\n\t\treturn fn(args);\r\n\t};\r\n\r\n\t// Preserve .conversion property if there is one\r\n\tif ('conversion' in fn) {\r\n\t\twrappedFn.conversion = fn.conversion;\r\n\t}\r\n\r\n\treturn wrappedFn;\r\n}\r\n\r\nfunction wrapRounded(fn) {\r\n\tconst wrappedFn = function (...args) {\r\n\t\tconst arg0 = args[0];\r\n\r\n\t\tif (arg0 === undefined || arg0 === null) {\r\n\t\t\treturn arg0;\r\n\t\t}\r\n\r\n\t\tif (arg0.length > 1) {\r\n\t\t\targs = arg0;\r\n\t\t}\r\n\r\n\t\tconst result = fn(args);\r\n\r\n\t\t// We're assuming the result is an array here.\r\n\t\t// see notice in conversions.js; don't use box types\r\n\t\t// in conversion functions.\r\n\t\tif (typeof result === 'object') {\r\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\r\n\t\t\t\tresult[i] = Math.round(result[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// Preserve .conversion property if there is one\r\n\tif ('conversion' in fn) {\r\n\t\twrappedFn.conversion = fn.conversion;\r\n\t}\r\n\r\n\treturn wrappedFn;\r\n}\r\n\r\nmodels.forEach(fromModel => {\r\n\tconvert[fromModel] = {};\r\n\r\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\r\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\r\n\r\n\tconst routes = route(fromModel);\r\n\tconst routeModels = Object.keys(routes);\r\n\r\n\trouteModels.forEach(toModel => {\r\n\t\tconst fn = routes[toModel];\r\n\r\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\r\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\r\n\t});\r\n});\r\n\r\nexport default convert;\r\n"],"names":["conversions","route"],"mappings":";;;AAGK,MAAC,UAAU,CAAG;AAEnB,MAAM,SAAS,OAAO,KAAKA,mEAAAA,OAAW;AAEtC,SAAS,QAAQ,IAAI;AACpB,QAAM,YAAY,YAAa,MAAM;AACpC,UAAM,OAAO,KAAK,CAAC;AACnB,QAAI,SAAS,UAAa,SAAS,MAAM;AACxC,aAAO;AAAA,IACP;AAED,QAAI,KAAK,SAAS,GAAG;AACpB,aAAO;AAAA,IACP;AAED,WAAO,GAAG,IAAI;AAAA,EAChB;AAGC,MAAI,gBAAgB,IAAI;AACvB,cAAU,aAAa,GAAG;AAAA,EAC1B;AAED,SAAO;AACR;AAEA,SAAS,YAAY,IAAI;AACxB,QAAM,YAAY,YAAa,MAAM;AACpC,UAAM,OAAO,KAAK,CAAC;AAEnB,QAAI,SAAS,UAAa,SAAS,MAAM;AACxC,aAAO;AAAA,IACP;AAED,QAAI,KAAK,SAAS,GAAG;AACpB,aAAO;AAAA,IACP;AAED,UAAM,SAAS,GAAG,IAAI;AAKtB,QAAI,OAAO,WAAW,UAAU;AAC/B,eAAS,MAAM,OAAO,QAAQ,IAAI,GAAG,IAAI,KAAK,KAAK;AAClD,eAAO,CAAC,IAAI,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,MAChC;AAAA,IACD;AAED,WAAO;AAAA,EACT;AAGC,MAAI,gBAAgB,IAAI;AACvB,cAAU,aAAa,GAAG;AAAA,EAC1B;AAED,SAAO;AACR;AAEA,OAAO,QAAQ,eAAa;AAC3B,UAAQ,SAAS,IAAI;AAErB,SAAO,eAAe,QAAQ,SAAS,GAAG,YAAY,EAAC,OAAOA,2EAAY,SAAS,EAAE,SAAQ,CAAC;AAC9F,SAAO,eAAe,QAAQ,SAAS,GAAG,UAAU,EAAC,OAAOA,2EAAY,SAAS,EAAE,OAAM,CAAC;AAE1F,QAAM,SAASC,mEAAM,SAAS;AAC9B,QAAM,cAAc,OAAO,KAAK,MAAM;AAEtC,cAAY,QAAQ,aAAW;AAC9B,UAAM,KAAK,OAAO,OAAO;AAEzB,YAAQ,SAAS,EAAE,OAAO,IAAI,YAAY,EAAE;AAC5C,YAAQ,SAAS,EAAE,OAAO,EAAE,MAAM,QAAQ,EAAE;AAAA,EAC9C,CAAE;AACF,CAAC;;"}