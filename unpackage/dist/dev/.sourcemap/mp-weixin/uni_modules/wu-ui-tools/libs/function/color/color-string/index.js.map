{"version":3,"file":"index.js","sources":["uni_modules/wu-ui-tools/libs/function/color/color-string/index.js"],"sourcesContent":["/* MIT license */\r\nimport colorNames from '../color-name'\r\nimport swizzle from '../simple-swizzle'\r\nvar hasOwnProperty = Object.hasOwnProperty;\r\n\r\nvar reverseNames = Object.create(null);\r\n\r\n// create a list of reverse color names\r\nfor (var name in colorNames) {\r\n\tif (hasOwnProperty.call(colorNames, name)) {\r\n\t\treverseNames[colorNames[name]] = name;\r\n\t}\r\n}\r\n\r\nvar cs = {\r\n\tto: {},\r\n\tget: {}\r\n};\r\n\r\ncs.get = function (string) {\r\n\tvar prefix = string.substring(0, 3).toLowerCase();\r\n\tvar val;\r\n\tvar model;\r\n\tswitch (prefix) {\r\n\t\tcase 'hsl':\r\n\t\t\tval = cs.get.hsl(string);\r\n\t\t\tmodel = 'hsl';\r\n\t\t\tbreak;\r\n\t\tcase 'hwb':\r\n\t\t\tval = cs.get.hwb(string);\r\n\t\t\tmodel = 'hwb';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tval = cs.get.rgb(string);\r\n\t\t\tmodel = 'rgb';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (!val) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {model: model, value: val};\r\n};\r\n\r\ncs.get.rgb = function (string) {\r\n\tif (!string) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\r\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\r\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\r\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\r\n\tvar keyword = /^(\\w+)$/;\r\n\r\n\tvar rgb = [0, 0, 0, 1];\r\n\tvar match;\r\n\tvar i;\r\n\tvar hexAlpha;\r\n\r\n\tif (match = string.match(hex)) {\r\n\t\thexAlpha = match[2];\r\n\t\tmatch = match[1];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\r\n\t\t\tvar i2 = i * 2;\r\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\r\n\t\t}\r\n\r\n\t\tif (hexAlpha) {\r\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\r\n\t\t}\r\n\t} else if (match = string.match(abbr)) {\r\n\t\tmatch = match[1];\r\n\t\thexAlpha = match[3];\r\n\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\r\n\t\t}\r\n\r\n\t\tif (hexAlpha) {\r\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\r\n\t\t}\r\n\t} else if (match = string.match(rgba)) {\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\r\n\t\t}\r\n\r\n\t\tif (match[4]) {\r\n\t\t\tif (match[5]) {\r\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\r\n\t\t\t} else {\r\n\t\t\t\trgb[3] = parseFloat(match[4]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (match = string.match(per)) {\r\n\t\tfor (i = 0; i < 3; i++) {\r\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n\t\t}\r\n\r\n\t\tif (match[4]) {\r\n\t\t\tif (match[5]) {\r\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\r\n\t\t\t} else {\r\n\t\t\t\trgb[3] = parseFloat(match[4]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (match = string.match(keyword)) {\r\n\t\tif (match[1] === 'transparent') {\r\n\t\t\treturn [0, 0, 0, 0];\r\n\t\t}\r\n\r\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\trgb = colorNames[match[1]];\r\n\t\trgb[3] = 1;\r\n\r\n\t\treturn rgb;\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfor (i = 0; i < 3; i++) {\r\n\t\trgb[i] = clamp(rgb[i], 0, 255);\r\n\t}\r\n\trgb[3] = clamp(rgb[3], 0, 1);\r\n\r\n\treturn rgb;\r\n};\r\n\r\ncs.get.hsl = function (string) {\r\n\tif (!string) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\r\n\tvar match = string.match(hsl);\r\n\r\n\tif (match) {\r\n\t\tvar alpha = parseFloat(match[4]);\r\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\r\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\r\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\r\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\r\n\t\treturn [h, s, l, a];\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\ncs.get.hwb = function (string) {\r\n\tif (!string) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\r\n\tvar match = string.match(hwb);\r\n\r\n\tif (match) {\r\n\t\tvar alpha = parseFloat(match[4]);\r\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\r\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\r\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\r\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n\t\treturn [h, w, b, a];\r\n\t}\r\n\r\n\treturn null;\r\n};\r\n\r\ncs.to.hex = function () {\r\n\tvar rgba = swizzle(arguments);\r\n\r\n\treturn (\r\n\t\t'#' +\r\n\t\thexDouble(rgba[0]) +\r\n\t\thexDouble(rgba[1]) +\r\n\t\thexDouble(rgba[2]) +\r\n\t\t(rgba[3] < 1\r\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\r\n\t\t\t: '')\r\n\t);\r\n};\r\n\r\ncs.to.rgb = function () {\r\n\tvar rgba = swizzle(arguments);\r\n\r\n\treturn rgba.length < 4 || rgba[3] === 1\r\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\r\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\r\n};\r\n\r\ncs.to.rgb.percent = function () {\r\n\tvar rgba = swizzle(arguments);\r\n\r\n\tvar r = Math.round(rgba[0] / 255 * 100);\r\n\tvar g = Math.round(rgba[1] / 255 * 100);\r\n\tvar b = Math.round(rgba[2] / 255 * 100);\r\n\r\n\treturn rgba.length < 4 || rgba[3] === 1\r\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\r\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\r\n};\r\n\r\ncs.to.hsl = function () {\r\n\tvar hsla = swizzle(arguments);\r\n\treturn hsla.length < 4 || hsla[3] === 1\r\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\r\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\r\n};\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\ncs.to.hwb = function () {\r\n\tvar hwba = swizzle(arguments);\r\n\r\n\tvar a = '';\r\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\r\n\t\ta = ', ' + hwba[3];\r\n\t}\r\n\r\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\r\n};\r\n\r\ncs.to.keyword = function (rgb) {\r\n\treturn reverseNames[rgb.slice(0, 3)];\r\n};\r\n\r\n// helpers\r\nfunction clamp(num, min, max) {\r\n\treturn Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n\tvar str = Math.round(num).toString(16).toUpperCase();\r\n\treturn (str.length < 2) ? '0' + str : str;\r\n}\r\n\r\nexport default cs;"],"names":["colorNames","swizzle"],"mappings":"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"}