{"version":3,"file":"util.js","sources":["uni_modules/wu-calendar/components/wu-calendar/util.js"],"sourcesContent":["import calendar from './calendar.js';\r\nimport CALENDAR from './calendar.js'\r\n\r\nclass Calendar {\r\n\tconstructor({\r\n\t\tdate,\r\n\t\tselected,\r\n\t\tstartDate,\r\n\t\tendDate,\r\n\t\tmode,\r\n\t\tmonthShowCurrentMonth,\r\n\t\trangeEndRepick,\r\n\t\trangeSameDay,\r\n\t\trangeHaveDisableTruncation,\r\n\t\ttype,\r\n\t\tfoldStatus,\r\n\t\tstartWeek\r\n\t} = {}) {\r\n\t\t// 当前日期\r\n\t\tthis.date = this.getDate(new Date()) // 当前初入日期\r\n\t\t// 打点信息\r\n\t\tthis.selected = selected || [];\r\n\t\t// 范围开始\r\n\t\tthis.startDate = startDate\r\n\t\t// 范围结束\r\n\t\tthis.endDate = endDate\r\n\t\t// 日历以周几开始\r\n\t\tthis.startWeek = startWeek\r\n\t\t// 日期选择类型\r\n\t\tthis.mode = mode\r\n\t\t// 日历类型\r\n\t\tthis.type = type\r\n\t\t// 折叠状态\r\n\t\tthis.foldStatus = foldStatus\r\n\t\t// 允许范围内重选结束日期\r\n\t\tthis.rangeEndRepick = rangeEndRepick\r\n\t\t// 允许日期选择范围起始日期为同一天\r\n\t\tthis.rangeSameDay = rangeSameDay\r\n\t\t// 日期选择范围内遇到打点禁用日期是否截断\r\n\t\tthis.rangeHaveDisableTruncation = rangeHaveDisableTruncation\r\n\t\t// 每月是否仅显示当月的数据\r\n\t\tthis.monthShowCurrentMonth = monthShowCurrentMonth\r\n\t\t// 清理多选状态\r\n\t\tthis.cleanRange()\r\n\t\t// 每周日期\r\n\t\tthis.weeks = {}\r\n\t\t// 多个日期\r\n\t\tthis.multiple = [];\r\n\t}\r\n\t/**\r\n\t * 设置日期\r\n\t * @param {Object} date\r\n\t */\r\n\tsetDate(date) {\r\n\t\tthis.selectDate = this.getDate(date)\r\n\t\tthis._getWeek(this.selectDate.fullDate)\r\n\t}\r\n\r\n\t/**\r\n\t * 清除范围\r\n\t */\r\n\tcleanRange() {\r\n\t\tthis.rangeStatus = {\r\n\t\t\tbefore: '',\r\n\t\t\tafter: '',\r\n\t\t\tdata: []\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 清除多选\r\n\t */\r\n\tcleanMultiple() {\r\n\t\tthis.multiple = []\r\n\t}\r\n\r\n\t/**\r\n\t * 重置开始日期\r\n\t */\r\n\tresetSatrtDate(startDate) {\r\n\t\t// 范围开始\r\n\t\tthis.startDate = startDate\r\n\t}\r\n\r\n\t/**\r\n\t * 重置结束日期\r\n\t */\r\n\tresetEndDate(endDate) {\r\n\t\t// 范围结束\r\n\t\tthis.endDate = endDate\r\n\t}\r\n\r\n\t/**\r\n\t * 重置是否每月仅显示当月数据\r\n\t * @param {Boolean} show 是否仅显示当月数据 \r\n\t */\r\n\tresetMonthShowCurrentMonth(show) {\r\n\t\tthis.monthShowCurrentMonth = show\r\n\t}\r\n\r\n\t// 重置允许范围内重选结束日期\r\n\tresetRangeEndRepick(val) {\r\n\t\tthis.rangeEndRepick = val\r\n\t}\r\n\t\r\n\t// 重置允许日期范围选择起始日期为同一天\r\n\tresetRangeSameDay(val) {\r\n\t\tthis.rangeSameDay = val\r\n\t}\r\n\t\r\n\t// 重置范围内遇到打点禁用日期是否截断\r\n\tresetRangeHaveDisableTruncation(val) {\r\n\t\tthis.rangeHaveDisableTruncation = val\r\n\t}\r\n\t\r\n\t// 重置日期选择模式\r\n\tresetMode(val) {\r\n\t\tthis.mode = val\r\n\t}\r\n\r\n\t// 重置折叠状态\r\n\tresetFoldStatus(val) {\r\n\t\tthis.foldStatus = val\r\n\t}\r\n\t\r\n\t// 重置日历以周几开始\r\n\tresetStartWeek(val) {\r\n\t\tthis.startWeek = val\r\n\t}\r\n\r\n\t/**\r\n\t * 创建本月某一天的信息\r\n\t */\r\n\t_createCurrentDay(nowDate, full, date) {\r\n\t\t// 是否今天\r\n\t\tlet isDay = this.date.fullDate === nowDate\r\n\t\t// 获取打点信息\r\n\t\tlet info = this.selected && this.selected.find((item) => {\r\n\t\t\tif (this.dateEqual(nowDate, item.date)) {\r\n\t\t\t\treturn item\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// 日期禁用\r\n\t\tlet disableBefore = true\r\n\t\tlet disableAfter = true\r\n\t\tif (this.startDate) {\r\n\t\t\tdisableBefore = this.dateCompare(this.startDate, nowDate)\r\n\t\t}\r\n\r\n\t\tif (this.endDate) {\r\n\t\t\tdisableAfter = this.dateCompare(nowDate, this.endDate)\r\n\t\t}\r\n\r\n\t\t// 范围选择模式\r\n\t\tlet ranges = this.rangeStatus.data\r\n\t\tlet checked = false\r\n\t\tif (this.mode == 'range') {\r\n\t\t\tchecked = ranges.findIndex((item) => this.dateEqual(item, nowDate)) !== -1 ? true : false;\r\n\t\t}\r\n\r\n\t\t// 多日期选择模式\r\n\t\tlet multiples = this.multiple\r\n\t\tlet multiplesChecked = false\r\n\t\tif (this.mode == 'multiple') {\r\n\t\t\tmultiplesChecked = multiples.findIndex(item => this.dateEqual(item, nowDate)) !== -1;\r\n\t\t}\r\n\r\n\t\tlet data = {\r\n\t\t\tfullDate: nowDate,\r\n\t\t\tyear: full.year,\r\n\t\t\tdate,\r\n\t\t\ttype: this.type,\r\n\t\t\tmode: this.mode,\r\n\t\t\tmultiples: this.mode == 'multiple' ? multiplesChecked : false,\r\n\t\t\trangeMultiple: this.mode == 'range' ? checked : false,\r\n\t\t\tbeforeRange: this.dateEqual(this.rangeStatus.before, nowDate),\r\n\t\t\tafterRange: this.dateEqual(this.rangeStatus.after, nowDate),\r\n\t\t\tmonth: full.month,\r\n\t\t\tlunar: this.getlunar(full.year, full.month, date),\r\n\t\t\tdisable: !(disableBefore && disableAfter),\r\n\t\t\tisDay\r\n\t\t}\r\n\r\n\r\n\t\tif (info) {\r\n\t\t\tdata.extraInfo = info;\r\n\t\t\tdata.disable = info.disable || false;\r\n\t\t}\r\n\t\t\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * 获取任意时间\r\n\t */\r\n\tgetDate(date, AddDayCount = 0, str = 'day') {\r\n\t\tif (!date) {\r\n\t\t\tdate = new Date()\r\n\t\t}\r\n\t\tif (typeof date !== 'object') {\r\n\t\t\tdate = date.replace(/-/g, '/')\r\n\t\t}\r\n\t\tconst dd = new Date(date)\r\n\t\tswitch (str) {\r\n\t\t\tcase 'day':\r\n\t\t\t\tdd.setDate(dd.getDate() + AddDayCount) // 获取AddDayCount天后的日期\r\n\t\t\t\tbreak\r\n\t\t\tcase 'month':\r\n\t\t\t\tif (dd.getDate() === 31 && AddDayCount > 0) {\r\n\t\t\t\t\tdd.setDate(dd.getDate() + AddDayCount)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst preMonth = dd.getMonth()\r\n\t\t\t\t\tdd.setMonth(preMonth + AddDayCount) // 获取AddDayCount天后的日期\r\n\t\t\t\t\tconst nextMonth = dd.getMonth()\r\n\t\t\t\t\t// 处理 pre 切换月份目标月份为2月没有当前日(30 31) 切换错误问题\r\n\t\t\t\t\tif (AddDayCount < 0 && preMonth !== 0 && nextMonth - preMonth > AddDayCount) {\r\n\t\t\t\t\t\tdd.setMonth(nextMonth + (nextMonth - preMonth + AddDayCount))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 处理 next 切换月份目标月份为2月没有当前日(30 31) 切换错误问题\r\n\t\t\t\t\tif (AddDayCount > 0 && nextMonth - preMonth > AddDayCount) {\r\n\t\t\t\t\t\tdd.setMonth(nextMonth - (nextMonth - preMonth - AddDayCount))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t\tcase 'week':\r\n\t\t\t\tdd.setDate(dd.getDate() + (AddDayCount * 7))\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'year':\r\n\t\t\t\tdd.setFullYear(dd.getFullYear() + AddDayCount) // 获取AddDayCount天后的日期\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t\tconst y = dd.getFullYear()\r\n\t\tconst m = dd.getMonth() + 1 < 10 ? '0' + (dd.getMonth() + 1) : dd.getMonth() + 1 // 获取当前月份的日期，不足10补0\r\n\t\tconst d = dd.getDate() < 10 ? '0' + dd.getDate() : dd.getDate() // 获取当前几号，不足10补0\r\n\t\treturn {\r\n\t\t\tfullDate: y + '-' + m + '-' + d,\r\n\t\t\tyear: y,\r\n\t\t\tmonth: m,\r\n\t\t\tdate: d,\r\n\t\t\tday: dd.getDay()\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 获取上月剩余天数\r\n\t */\r\n\t_getLastMonthDays(firstDay, full) {\r\n\t\tlet dateArr = []\r\n\t\tfor (let i = firstDay; i > 0; i--) {\r\n\t\t\tconst beforeDate = new Date(full.year, full.month - 1, -i + 1).getDate()\r\n\t\t\tdateArr.push({\r\n\t\t\t\tdate: beforeDate,\r\n\t\t\t\tmonth: full.month - 1,\r\n\t\t\t\tyear: full.year,\r\n\t\t\t\tlunar: this.getlunar(full.year, full.month - 1, beforeDate),\r\n\t\t\t\tdisable: true\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn dateArr\r\n\t}\r\n\t/**\r\n\t * 获取本月天数\r\n\t */\r\n\t_currentMonthDays(dateData, full) {\r\n\t\tlet dateArr = []\r\n\t\tlet fullDate = this.date.fullDate\r\n\t\tfor (let i = 1; i <= dateData; i++) {\r\n\t\t\tlet nowDate = full.year + '-' + (full.month < 10 ?\r\n\t\t\t\tfull.month : full.month) + '-' + (i < 10 ?\r\n\t\t\t\t'0' + i : i)\r\n\t\t\tdateArr.push(this._createCurrentDay(nowDate, full, i))\r\n\t\t}\r\n\t\treturn dateArr\r\n\t}\r\n\t/**\r\n\t * 获取下月天数\r\n\t */\r\n\t_getNextMonthDays(surplus, full) {\r\n\t\tlet dateArr = []\r\n\t\tfor (let i = 1; i < surplus + 1; i++) {\r\n\t\t\tdateArr.push({\r\n\t\t\t\tdate: i,\r\n\t\t\t\tmonth: Number(full.month) + 1,\r\n\t\t\t\tlunar: this.getlunar(full.year, Number(full.month) + 1, i),\r\n\t\t\t\tdisable: true\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn dateArr\r\n\t}\r\n\t/**\r\n\t * 获取任意日期的一周\r\n\t */\r\n\t_getWeekDays(dateData) {\r\n\t\tlet dateArr = [];\r\n\t\tlet oneDayTime = 1000 * 60 * 60 * 24\r\n\t\tlet today = new Date(dateData);\r\n\t\t// 获取这个日期是星期几\r\n\t\tlet todayDay;\r\n\t\tlet startDate;\r\n\t\t// 如果日历以周一开始\r\n\t\tif(this.startWeek == 'mon') {\r\n\t\t\ttodayDay = today.getDay() || 7;\r\n\t\t\tstartDate = new Date(today.getTime() - oneDayTime * (todayDay - 1));\r\n\t\t} else {\r\n\t\t\ttodayDay = today.getDay();\r\n\t\t\tstartDate = new Date(today.getTime() - oneDayTime * todayDay);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\t\t\tlet temp = new Date(startDate.getTime() + i * oneDayTime)\r\n\t\t\tlet newDate = this.getDate(`${temp.getFullYear()}-${temp.getMonth() + 1}-${temp.getDate()}`)\r\n\t\t\tdateArr.push(this._createCurrentDay(newDate.fullDate, newDate, Number(newDate.date)))\r\n\t\t}\r\n\r\n\t\treturn dateArr;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取当前日期详情\r\n\t * @param {Object} date\r\n\t */\r\n\tgetInfo(date) {\r\n\t\tif (!date) {\r\n\t\t\tdate = new Date()\r\n\t\t}\r\n\t\tconst dateInfo = this.canlender.find(item => item.fullDate === this.getDate(date).fullDate)\r\n\t\treturn dateInfo\r\n\t}\r\n\r\n\t/**\r\n\t * 比较时间大小\r\n\t */\r\n\tdateCompare(startDate, endDate) {\r\n\t\t// 计算截止时间\r\n\t\tstartDate = new Date(startDate.replace('-', '/').replace('-', '/'))\r\n\t\t// 计算详细项的截止时间\r\n\t\tendDate = new Date(endDate.replace('-', '/').replace('-', '/'))\r\n\t\tif (startDate <= endDate) {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 比较时间是否相等\r\n\t */\r\n\tdateEqual(before = '', after = '') {\r\n\t\t// 计算截止时间\r\n\t\tbefore = new Date(before.replace('-', '/').replace('-', '/'))\r\n\t\t// 计算详细项的截止时间\r\n\t\tafter = new Date(after.replace('-', '/').replace('-', '/'))\r\n\t\tif (before.getTime() - after.getTime() === 0) {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 获取日期范围内所有日期\r\n\t * @param {Object} begin\r\n\t * @param {Object} end\r\n\t */\r\n\tgetDateAll(begin, end) {\r\n\t\t// 找出所有打点中已禁用的部分 不让其被添加在日期选择范围内\r\n\t\tlet disableList = this.selected.filter(item => item.date && item.disable).map(item => item.date)\r\n\r\n\t\tvar arr = []\r\n\t\tvar ab = begin.split('-')\r\n\t\tvar ae = end.split('-')\r\n\t\tvar db = new Date()\r\n\t\tdb.setFullYear(ab[0], ab[1] - 1, ab[2])\r\n\t\tvar de = new Date()\r\n\t\tde.setFullYear(ae[0], ae[1] - 1, ae[2])\r\n\t\tvar wuxDb = db.getTime() - 24 * 60 * 60 * 1000\r\n\t\tvar wuxDe = de.getTime() - 24 * 60 * 60 * 1000\r\n\t\tfor (var k = wuxDb; k <= wuxDe;) {\r\n\t\t\tk = k + 24 * 60 * 60 * 1000\r\n\t\t\tlet fullDate = this.getDate(new Date(parseInt(k))).fullDate\r\n\t\t\t// 如果要在选择范围内截断日期\r\n\t\t\tif(this.rangeHaveDisableTruncation) {\r\n\t\t\t\t// 如果不在打点禁止列表中\r\n\t\t\t\tif (disableList.includes(fullDate)) return arr;\r\n\t\t\t\tarr.push(fullDate)\r\n\t\t\t} else {\r\n\t\t\t\tif (!disableList.includes(fullDate)) arr.push(fullDate);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn arr\r\n\t}\r\n\t/**\r\n\t * 计算阴历日期显示\r\n\t */\r\n\tgetlunar(year, month, date) {\r\n\t\treturn CALENDAR.solar2lunar(year, month, date)\r\n\t}\r\n\t/**\r\n\t * 设置打点\r\n\t */\r\n\tsetSelectInfo(data, value) {\r\n\t\tthis.selected = value\r\n\t\tthis._getWeek(data)\r\n\t}\r\n\r\n\t/**\r\n\t *  设置范围\r\n\t */\r\n\tsetRange(fullDate) {\r\n\t\tlet {\r\n\t\t\tbefore,\r\n\t\t\tafter\r\n\t\t} = this.rangeStatus;\r\n\r\n\t\t// 非范围选择不再执行\r\n\t\tif (this.mode != 'range') return\r\n\r\n\t\t// 判断目前的日期 是否 比before日期小或者等于before日期 如果为true就要重置\r\n\t\tlet reset = this.dateCompare(fullDate, before);\r\n\t\t// 如果日期选择范围允许为同一天 且 目前是需要重置的\r\n\t\tif (this.rangeSameDay && before && reset) {\r\n\t\t\t// 判断是否需要相等 如果 不相等 则 重置 如果相等 则不重置\r\n\t\t\treset = !this.dateEqual(fullDate, before);\r\n\t\t}\r\n\r\n\t\tif ((before && after || reset) && (!this.rangeEndRepick || (this.rangeEndRepick && this.rangeStatus.data\r\n\t\t\t\t.indexOf(fullDate) == -1))) {\r\n\t\t\tthis.rangeStatus.before = fullDate;\r\n\t\t\tthis.rangeStatus.after = '';\r\n\t\t\tthis.rangeStatus.data = [];\r\n\t\t} else {\r\n\t\t\tif (!before) {\r\n\t\t\t\tthis.rangeStatus.before = fullDate\r\n\t\t\t} else {\r\n\t\t\t\tif (this.dateCompare(this.rangeStatus.before, fullDate)) {\r\n\t\t\t\t\tthis.rangeStatus.data = this.getDateAll(this.rangeStatus.before, fullDate);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.rangeStatus.data = this.getDateAll(fullDate, this.rangeStatus.before);\r\n\t\t\t\t}\r\n\t\t\t\tthis.rangeStatus.after = this.rangeStatus.data[this.rangeStatus.data.length - 1]\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._getWeek(fullDate)\r\n\t}\r\n\r\n\t/**\r\n\t *  设置多选\r\n\t */\r\n\tsetMultiple(fullDate) {\r\n\t\t// 非多选不再执行\r\n\t\tif (this.mode != 'multiple') return\r\n\t\t// 检查是否已经多选\r\n\t\tlet index = this.multiple.findIndex((item) => {\r\n\t\t\tif (this.dateEqual(fullDate, item)) {\r\n\t\t\t\treturn item\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (index === -1) {\r\n\t\t\tthis.multiple.push(fullDate)\r\n\t\t\tthis.setDate(fullDate)\r\n\t\t} else {\r\n\t\t\tthis.multiple = this.multiple.filter((item, i) => i != index)\r\n\t\t}\r\n\t\tthis._getWeek(fullDate)\r\n\t}\r\n\r\n\t/**\r\n\t * 获取每周数据\r\n\t * @param {Object} dateData\r\n\t */\r\n\t_getWeek(dateData, useWeeks = true) {\r\n\t\tconst {\r\n\t\t\tyear,\r\n\t\t\tmonth\r\n\t\t} = this.getDate(dateData)\r\n\r\n\t\tlet weeks = {}\r\n\t\t// 日历数据\r\n\t\tlet canlender = [];\r\n\r\n\t\tif (this.foldStatus === 'open') {\r\n\t\t\t// 默认以周末开始\r\n\t\t\tlet firstDay = new Date(year, month - 1, 1).getDay();\r\n\t\t\t// 如果以周一开始\r\n\t\t\tif(this.startWeek === 'mon') {\r\n\t\t\t\tfirstDay = firstDay === 0 ? 6 : firstDay - 1;\r\n\t\t\t}\r\n\t\t\tlet currentDay = new Date(year, month, 0).getDate()\r\n\t\t\t// 日期数据\r\n\t\t\tlet dates = {\r\n\t\t\t\tlastMonthDays: this._getLastMonthDays(firstDay, this.getDate(dateData)), // 上个月末尾几天\r\n\t\t\t\tcurrentMonthDys: this._currentMonthDays(currentDay, this.getDate(dateData)), // 本月天数\r\n\t\t\t\tweeks: []\r\n\t\t\t}\r\n\t\t\t// 下月开始几天\r\n\t\t\tconst surplus = 42 - (dates.lastMonthDays.length + dates.currentMonthDys.length)\r\n\t\t\tdates.nextMonthDays = this._getNextMonthDays(surplus, this.getDate(dateData))\r\n\r\n\t\t\t// 如果仅显示当月\r\n\t\t\tif (this.monthShowCurrentMonth) {\r\n\t\t\t\t// 日历数据\r\n\t\t\t\tcanlender = canlender.concat(\r\n\t\t\t\t\tdates.lastMonthDays.map(item => item = {\r\n\t\t\t\t\t\tempty: true,\r\n\t\t\t\t\t\tlunar: {},\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tdates.currentMonthDys,\r\n\t\t\t\t\tdates.nextMonthDays.map(item => item = {\r\n\t\t\t\t\t\tempty: true,\r\n\t\t\t\t\t\tlunar: {},\r\n\t\t\t\t\t}),\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t// 拼接数组  上个月开始几天 + 本月天数+ 下个月开始几天\r\n\t\t\t\tcanlender = canlender.concat(dates.lastMonthDays, dates.currentMonthDys, dates.nextMonthDays)\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcanlender = this._getWeekDays(dateData)\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < canlender.length; i++) {\r\n\t\t\tif (i % 7 === 0) {\r\n\t\t\t\tweeks[parseInt(i / 7)] = new Array(7)\r\n\t\t\t}\r\n\t\t\tweeks[parseInt(i / 7)][i % 7] = canlender[i] || {};\r\n\t\t}\r\n\r\n\t\tif (useWeeks) {\r\n\t\t\tthis.canlender = canlender\r\n\t\t\tthis.weeks = weeks\r\n\t\t}\r\n\r\n\t\treturn weeks\r\n\t}\r\n\r\n\r\n\t//静态方法\r\n\t// static init(date) {\r\n\t// \tif (!this.instance) {\r\n\t// \t\tthis.instance = new Calendar(date);\r\n\t// \t}\r\n\t// \treturn this.instance;\r\n\t// }\r\n}\r\n\r\n\r\nexport default Calendar"],"names":["CALENDAR"],"mappings":"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"}